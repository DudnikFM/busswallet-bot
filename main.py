import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext
import os

TOKEN = "8122510813:AAHOpgwNJqUWUhuo01Wl0FywRS40sBARhR0"
ADMIN_CHAT_ID = "7786764846"

WALLETS = {
    "TRC20": "TQw19dGhSNeryY3eDX3byeD4KsThyNdCLU",
    "BEP20": "0x7a210fc89eccfaed2ea25cc27446e44743533ac2",
    "ERC20": "0x7a210fc89eccfaed2ea25cc27446e44743533ac2",
    "BTC": "1G7pG7WQwTvmmND9RgQFzkEQyuq9WAWeM3",
    "SOL": "3uUsgFUUUJLx5rYJ786rgcBozaxtFLvoSv1a2xvfbKrh"
}

def start(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("TRC20", callback_data='TRC20')],
        [InlineKeyboardButton("BEP20", callback_data='BEP20')],
        [InlineKeyboardButton("ERC20", callback_data='ERC20')],
        [InlineKeyboardButton("BTC", callback_data='BTC')],
        [InlineKeyboardButton("SOL", callback_data='SOL')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –¥–ª—è –æ–ø–ª–∞—Ç—ã:', reply_markup=reply_markup)

def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    network = query.data
    wallet = WALLETS.get(network)
    message = f"üí≥ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ $35</b> –Ω–∞ –∞–¥—Ä–µ—Å –≤ —Å–µ—Ç–∏ <b>{network}</b>: 
<code>{wallet}</code>"
    keyboard = [
        [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f"confirm_{network}")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    query.edit_message_text(text=message, parse_mode='HTML', reply_markup=reply_markup)

def confirm(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    user = query.from_user
    network = query.data.split("_")[1]
    wallet = WALLETS.get(network)
    context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=(
            f"üßæ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å—á—ë—Ç–∞
"
            f"–ò–º—è: {user.full_name}
"
            f"–Æ–∑–µ—Ä: @{user.username}
"
            f"–°–µ—Ç—å: {network}
"
            f"–ö–æ—à–µ–ª—ë–∫: {wallet}

"
            f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–æ–º–µ—Ä —Å—á—ë—Ç–∞ –≤—Ä—É—á–Ω—É—é."
        )
    )
    query.edit_message_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å—á—ë—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")

def cancel(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.edit_message_text("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞—ë—Ç—Å—è –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –≤–∞—à –ø–ª–∞—Ç—ë–∂. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ Telegram: @secondlang_support")

def main() -> None:
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(CallbackQueryHandler(confirm, pattern='^confirm_'))
    dispatcher.add_handler(CallbackQueryHandler(cancel, pattern='^cancel$'))
    dispatcher.add_handler(CallbackQueryHandler(button))
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    main()
